// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  userSeq   String                @id @map("user_seq")
  name      String?
  createdAt DateTime              @default(now()) @map("created_at")
  updatedAt DateTime              @updatedAt @map("updated_at")
  schedules UserScheduleMapping[]
  todos     Todo[]

  @@map(name: "MB_USER")
}

model Todo {
  id        Int      @id @default(autoincrement())
  title     String
  category  String
  userSeq   String   @map("user_seq")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  startTime DateTime @map("start_time")
  user      User     @relation(fields: [userSeq], references: [userSeq])
}

model UserScheduleMapping {
  id         Int      @id @default(autoincrement())
  userSeq    String   @map("user_seq")
  scheduleId Int      @map("schedule_id")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
  user       User     @relation(fields: [userSeq], references: [userSeq])
  schedule   Schedule @relation(fields: [scheduleId], references: [id])

  @@map(name: "MB_USER_SCHEDULE_MAPPING")
}

model Schedule {
  id        Int                   @id @default(autoincrement())
  title     String
  startTime DateTime              @map("start_time")
  endTime   DateTime              @map("end_time")
  isSpecial Boolean               @default(false) @map("is_special")
  createdAt DateTime              @default(now()) @map("created_at")
  updatedAt DateTime              @updatedAt @map("updated_at")
  users     UserScheduleMapping[]

  @@map(name: "MB_SCHEDULE")
}

model Question {
  id           Int              @id @default(autoincrement())
  text         String
  answer       String           @db.Char(1)
  categoryCode String           @map("category_code")
  createdAt    DateTime         @default(now()) @map("created_at")
  updatedAt    DateTime         @updatedAt @map("updated_at")
  category     QuestionCategory @relation(fields: [categoryCode], references: [code])
  options      Option[]
}

model Option {
  id         Int      @id @default(autoincrement())
  text       String
  label      String   @db.Char(1)
  questionId Int      @map("question_id")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
  question   Question @relation(fields: [questionId], references: [id])
}

model QuestionCategory {
  code      String     @id @unique
  name      String
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @updatedAt @map("updated_at")
  questions Question[]
}

model JobApplication {
  id              Int      @id @default(autoincrement())
  companyName     String   @map("company_name")
  applicationDate DateTime @map("application_date")
}
